{
  "contractName": "EtherReceiverMock",
  "abi": [
    {
      "stateMutability": "payable",
      "type": "receive"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "acceptEther",
          "type": "bool"
        }
      ],
      "name": "setAcceptEther",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.2+commit.661d1103\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"acceptEther\",\"type\":\"bool\"}],\"name\":\"setAcceptEther\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/semiott/Apps/eth-apps/EddyNet/core/contracts/external/contracts/mocks/EtherReceiverMock.sol\":\"EtherReceiverMock\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/semiott/Apps/eth-apps/EddyNet/core/contracts/external/contracts/mocks/EtherReceiverMock.sol\":{\"keccak256\":\"0xd00a024a92862aac28ea4bcf2b5418c6ce43ae1f7b99b4553d6185243c9fc269\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4f67545e3d095efcab196077772e20f64e83183eed7016a399d5839bed282d69\",\"dweb:/ipfs/QmfVHi6AEQkuKLdrLpA2U84bTJx99wX87drbCJ7hiZmq7i\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061010f806100206000396000f3fe608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e91906093565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600081359050608d8160c5565b92915050565b60006020828403121560a457600080fd5b600060b0848285016080565b91505092915050565b60008115159050919050565b60cc8160b9565b811460d657600080fd5b5056fea26469706673582212202be43dce05f78f7bbe01e2072ef352fc5e4bf12d182da4edc539d6aba0803faa64736f6c63430008020033",
  "deployedBytecode": "0x608060405260043610601f5760003560e01c80634fea120c14604057603b565b36603b5760008054906101000a900460ff16603957600080fd5b005b600080fd5b348015604b57600080fd5b5060626004803603810190605e91906093565b6064565b005b806000806101000a81548160ff02191690831515021790555050565b600081359050608d8160c5565b92915050565b60006020828403121560a457600080fd5b600060b0848285016080565b91505092915050565b60008115159050919050565b60cc8160b9565b811460d657600080fd5b5056fea26469706673582212202be43dce05f78f7bbe01e2072ef352fc5e4bf12d182da4edc539d6aba0803faa64736f6c63430008020033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:623:169",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "56:84:169",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "66:29:169",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "88:6:169"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "75:12:169"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "75:20:169"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "66:5:169"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "128:5:169"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_bool",
                      "nodeType": "YulIdentifier",
                      "src": "104:23:169"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "104:30:169"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "104:30:169"
                }
              ]
            },
            "name": "abi_decode_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "34:6:169",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "42:3:169",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "50:5:169",
                "type": ""
              }
            ],
            "src": "7:133:169"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "209:193:169",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "255:16:169",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "264:1:169",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:169",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "257:6:169"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "257:12:169"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "257:12:169"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "230:7:169"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:169"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "226:3:169"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "226:23:169"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "251:2:169",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "222:3:169"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "222:32:169"
                  },
                  "nodeType": "YulIf",
                  "src": "219:2:169"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "281:114:169",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "296:15:169",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "310:1:169",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "300:6:169",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "325:60:169",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "357:9:169"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "368:6:169"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "353:3:169"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "353:22:169"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "377:7:169"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "335:17:169"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "335:50:169"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "325:6:169"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "179:9:169",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "190:7:169",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "202:6:169",
                "type": ""
              }
            ],
            "src": "146:256:169"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "450:48:169",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "460:32:169",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "485:5:169"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "478:6:169"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "478:13:169"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "471:6:169"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "471:21:169"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "460:7:169"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "432:5:169",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "442:7:169",
                "type": ""
              }
            ],
            "src": "408:90:169"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "544:76:169",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "598:16:169",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "607:1:169",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "610:1:169",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "600:6:169"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "600:12:169"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "600:12:169"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "567:5:169"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "589:5:169"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_bool",
                              "nodeType": "YulIdentifier",
                              "src": "574:14:169"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "574:21:169"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "564:2:169"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "564:32:169"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "557:6:169"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "557:40:169"
                  },
                  "nodeType": "YulIf",
                  "src": "554:2:169"
                }
              ]
            },
            "name": "validator_revert_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "537:5:169",
                "type": ""
              }
            ],
            "src": "504:116:169"
          }
        ]
      },
      "contents": "{\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n}\n",
      "id": 169,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "58:261:75:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "58:261:75:-:0;;;;;;;;;;;;;;;;;;;;;;;264:12;;;;;;;;;;259:52;;292:8;;;259:52;58:261;;;;;123:92;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;197:11;182:12;;:26;;;;;;;;;;;;;;;;;;123:92;:::o;7:133:169:-;;88:6;75:20;66:29;;104:30;128:5;104:30;:::i;:::-;56:84;;;;:::o;146:256::-;;251:2;239:9;230:7;226:23;222:32;219:2;;;267:1;264;257:12;219:2;310:1;335:50;377:7;368:6;357:9;353:22;335:50;:::i;:::-;325:60;;281:114;209:193;;;;:::o;408:90::-;;485:5;478:13;471:21;460:32;;450:48;;;:::o;504:116::-;574:21;589:5;574:21;:::i;:::-;567:5;564:32;554:2;;610:1;607;600:12;554:2;544:76;:::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\ncontract EtherReceiverMock {\n    bool private _acceptEther;\n\n    function setAcceptEther(bool acceptEther) public {\n        _acceptEther = acceptEther;\n    }\n\n    receive () external payable {\n        if (!_acceptEther) {\n            revert();\n        }\n    }\n}\n",
  "sourcePath": "/home/semiott/Apps/eth-apps/EddyNet/core/contracts/external/contracts/mocks/EtherReceiverMock.sol",
  "ast": {
    "absolutePath": "/home/semiott/Apps/eth-apps/EddyNet/core/contracts/external/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        22908
      ]
    },
    "id": 22909,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22884,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:75"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 22908,
        "linearizedBaseContracts": [
          22908
        ],
        "name": "EtherReceiverMock",
        "nameLocation": "67:17:75",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 22886,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nameLocation": "104:12:75",
            "nodeType": "VariableDeclaration",
            "scope": 22908,
            "src": "91:25:75",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 22885,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "91:4:75",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 22895,
              "nodeType": "Block",
              "src": "172:43:75",
              "statements": [
                {
                  "expression": {
                    "id": 22893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22891,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22886,
                      "src": "182:12:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22892,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22888,
                      "src": "197:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "182:26:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22894,
                  "nodeType": "ExpressionStatement",
                  "src": "182:26:75"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 22896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nameLocation": "132:14:75",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22888,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nameLocation": "152:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 22896,
                  "src": "147:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22887,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "146:18:75"
            },
            "returnParameters": {
              "id": 22890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:0:75"
            },
            "scope": 22908,
            "src": "123:92:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22906,
              "nodeType": "Block",
              "src": "249:68:75",
              "statements": [
                {
                  "condition": {
                    "id": 22900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "263:13:75",
                    "subExpression": {
                      "id": 22899,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22886,
                      "src": "264:12:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22905,
                  "nodeType": "IfStatement",
                  "src": "259:52:75",
                  "trueBody": {
                    "id": 22904,
                    "nodeType": "Block",
                    "src": "278:33:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 22901,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "292:6:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 22902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "292:8:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22903,
                        "nodeType": "ExpressionStatement",
                        "src": "292:8:75"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 22907,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:75"
            },
            "returnParameters": {
              "id": 22898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:75"
            },
            "scope": 22908,
            "src": "221:96:75",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 22909,
        "src": "58:261:75"
      }
    ],
    "src": "33:287:75"
  },
  "legacyAST": {
    "absolutePath": "/home/semiott/Apps/eth-apps/EddyNet/core/contracts/external/contracts/mocks/EtherReceiverMock.sol",
    "exportedSymbols": {
      "EtherReceiverMock": [
        22908
      ]
    },
    "id": 22909,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22884,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:75"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 22908,
        "linearizedBaseContracts": [
          22908
        ],
        "name": "EtherReceiverMock",
        "nameLocation": "67:17:75",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 22886,
            "mutability": "mutable",
            "name": "_acceptEther",
            "nameLocation": "104:12:75",
            "nodeType": "VariableDeclaration",
            "scope": 22908,
            "src": "91:25:75",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 22885,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "91:4:75",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 22895,
              "nodeType": "Block",
              "src": "172:43:75",
              "statements": [
                {
                  "expression": {
                    "id": 22893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22891,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22886,
                      "src": "182:12:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22892,
                      "name": "acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22888,
                      "src": "197:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "182:26:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22894,
                  "nodeType": "ExpressionStatement",
                  "src": "182:26:75"
                }
              ]
            },
            "functionSelector": "4fea120c",
            "id": 22896,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setAcceptEther",
            "nameLocation": "132:14:75",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22889,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22888,
                  "mutability": "mutable",
                  "name": "acceptEther",
                  "nameLocation": "152:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 22896,
                  "src": "147:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 22887,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "146:18:75"
            },
            "returnParameters": {
              "id": 22890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "172:0:75"
            },
            "scope": 22908,
            "src": "123:92:75",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 22906,
              "nodeType": "Block",
              "src": "249:68:75",
              "statements": [
                {
                  "condition": {
                    "id": 22900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "263:13:75",
                    "subExpression": {
                      "id": 22899,
                      "name": "_acceptEther",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22886,
                      "src": "264:12:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22905,
                  "nodeType": "IfStatement",
                  "src": "259:52:75",
                  "trueBody": {
                    "id": 22904,
                    "nodeType": "Block",
                    "src": "278:33:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 22901,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967277,
                              4294967277
                            ],
                            "referencedDeclaration": 4294967277,
                            "src": "292:6:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 22902,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "292:8:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 22903,
                        "nodeType": "ExpressionStatement",
                        "src": "292:8:75"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 22907,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "229:2:75"
            },
            "returnParameters": {
              "id": 22898,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "249:0:75"
            },
            "scope": 22908,
            "src": "221:96:75",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 22909,
        "src": "58:261:75"
      }
    ],
    "src": "33:287:75"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.2+commit.661d1103.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-21T17:16:14.510Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}